

from tic_tac_toe_project2_functions import *









def TEST(description, expected_result, actual_result):
    print(description, end = ': ')
    if actual_result == expected_result:
        print('pass')
    else:
        print('FAIL')
        print('   Expected result:', expected_result)
        print('   Actual result:', actual_result)








def find_winner_TEST():
    print('Start find_winner_TEST')

    
    board = [ ['x', 'x', 'x', 'x', 'x',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('row win', True, find_winner(board))
    
    board = [ ['o', 'o', 'o', 'o', 'o',' ', ' ', ' ', ' ', ' '],
              ['x', 'x', 'x', 'x', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('row win', True, find_winner(board))

    
    board = [ ['x', 'o', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', 'o', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', 'o', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', 'o', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('column win', True, find_winner(board))
    
    board = [ ['o', 'x', 'x', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', 'x', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', 'x', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', 'x', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('column win', True, find_winner(board))
    

    
    board = [ ['x', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', 'x', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', 'x', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', 'x', ' ',' ', ' ', ' ', ' ', ' '],
              ['o', ' ', ' ', ' ', 'x',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('diagonal win', True, find_winner(board))
    
    board = [ ['o', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', 'o', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', 'o', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', 'o', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', ' ', ' ', 'o',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              ['x', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('diagonal win', True, find_winner(board))

    
    board = [ [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('no winner', False, find_winner(board))
    
    board = [ [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '],
              [' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' '] ]

    TEST('no winner', False, find_winner(board))

    print('End find_winner_TEST')
    print()

def next_player_TEST():
    print('Start next_player_TEST')
    TEST('x to o', 'o', next_player('x'))
    TEST('o to x', 'x', next_player('o'))
    print('End next_player_TEST')
    print()




find_winner_TEST()
next_player_TEST()
