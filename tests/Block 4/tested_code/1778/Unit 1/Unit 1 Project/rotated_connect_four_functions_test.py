

from rotated_connect_four_functions import *







def TEST(has_passed):
    if has_passed:
        print('pass')
    else:
        print('FAIL')




def approx_equal(a, b):
    return abs(a - b) < 0.0001




def is_move_legal_TEST():
    print('Start is_move_legal_TEST')
    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],

                 [' ', ' ', ' ', 'x', ' ', ' ']]
    
    TEST(is_move_legal(board, '6AB') == False)
    
    TEST(is_move_legal(board, 'B6') == False)
    
    TEST(is_move_legal(board, '6D') == False)
    
    TEST(is_move_legal(board, '4D') == False)
    
    TEST(is_move_legal(board, '5D') == True)
    print('End is_move_legalTEST')
    print()

def rotate_TEST():
    print('Start rotate_TEST')

    board =     [['a', 'b', 'c', 'd', 'e', 'f'],
                 ['g', 'h', 'i', 'j', 'k', 'l'],
                 ['m', 'n', 'o', 'p', 'q', 'r'],
                 ['s', 't', 'u', 'v', 'w', 'x'],
                 ['y', 'z', '!', '@', '#', '$'],
                 ['%', '^', '&', '*', '(', ')']]

    new_board = [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    result_board =[['%', 'y', 's', 'm', 'g', 'a'],
                   ['^', 'z', 't', 'n', 'h', 'b'],
                   ['&', '!', 'u', 'o', 'i', 'c'],
                   ['*', '@', 'v', 'p', 'j', 'd'],
                   ['(', '#', 'w', 'q', 'k', 'e'],
                   [')', '$', 'x', 'r', 'l', 'f']]
    
    
    TEST(rotate(new_board, board) == result_board)
    
    print('End rotate_TEST')
    print()

def any_blanks_TEST():
    print('Start any_blanks_TEST')

    
    TEST(any_blanks([' ', 'x', 'x', 'x', 'x', 'x']) == True)

    
    TEST(any_blanks(['x', 'x', 'x', 'x', 'x', ' ']) == True)

    
    TEST(any_blanks(['x', ' ', 'x', ' ', 'x', ' ']) == True)

    
    TEST(any_blanks(['x', 'x', 'x', 'x', 'x', 'x']) == False)

    print('End any_blanks_TEST')
    print()

def fall_down_TEST():
    print('Start fall_down_TEST')

    

    board =     [[' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    result_board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' ']]   
    
    TEST(fall_down(board) == result_board)

    

    board =     [[' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' ']]

    result_board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' ']]   
    
    TEST(fall_down(board) == result_board)

    

    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' ']]

    result_board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' ']]   
    
    TEST(fall_down(board) == result_board)

    

    board =     [[' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' ']]

    result_board =     [[' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' ']]   
    
    TEST(fall_down(board) == result_board)
    

    board =     [[' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    result_board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', ' ', ' ', ' ', ' '],
                        [' ', ' ', 'x', ' ', ' ', ' ']]   
    
    TEST(fall_down(board) == result_board) 
    print('End fall_down_TEST')
    print()

def find_winner_TEST():

    print('Start find_winner_TEST')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', 'x', 'x', 'x', 'x', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'x')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', 'o', 'o', 'o', 'o', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'o')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'x')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'o')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', 'x', ' '],
                 [' ', ' ', ' ', 'x', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', 'x', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'x')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', 'o', ' '],
                 [' ', ' ', ' ', 'o', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', 'o', ' ', ' ', ' ', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'o')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', 'x', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', 'x', ' ', ' '],
                 [' ', ' ', ' ', ' ', 'x', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'x')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', 'o', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'o', ' ', ' ', ' '],
                 [' ', ' ', ' ', 'o', ' ', ' '],
                 [' ', ' ', ' ', ' ', 'o', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'o')

    
    board =     [[' ', ' ', ' ', ' ', ' ', ' '],
                 [' ', 'o', ' ', ' ', ' ', ' '],
                 [' ', ' ', 'x', ' ', ' ', ' '],
                 [' ', ' ', ' ', 'o', ' ', ' '],
                 [' ', ' ', ' ', ' ', 'o', ' '],
                 [' ', ' ', ' ', ' ', ' ', ' ']]

    TEST(find_winner(board) == 'None')

    print('End find_winner_TEST')
    print()


is_move_legal_TEST()
rotate_TEST()
any_blanks_TEST()
fall_down_TEST()
find_winner_TEST()
