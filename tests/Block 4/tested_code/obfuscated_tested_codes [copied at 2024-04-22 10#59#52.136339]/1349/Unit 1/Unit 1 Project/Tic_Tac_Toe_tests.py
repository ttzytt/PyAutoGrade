





from Tic_Tac_Toe_functions import *







def TEST(has_passed):
    if has_passed:
        print('pass')
    else:
        print('FAIL')



def line_TEST():
    print('Start line_TEST')
    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)

    TEST(find_winner_all([
        [ ['x', 'x', 'x', 'x'],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)

    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)
    
    print('End line_TEST')
    print()

def face_diagonal_TEST():
    print('Start face_diagonal_TEST')
    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          [' ', 'x', ' ', ' '],
          [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', 'x'],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ [' ', ' ', ' ', 'x'],
          [' ', ' ', 'x', ' '],
          [' ', 'x', ' ', ' '],
          ['x', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)
    
    print('End face_diagonal_TEST')
    print()

def space_diagonal_TEST():
    print('Start space_diagonal_TEST')
    TEST(find_winner_all([
        [ ['x', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', 'x'] ]])==True)
    TEST(find_winner_all([
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', 'x'],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ [' ', ' ', ' ', 'x'],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '] ]])==True)
    
    print('End space_diagonal_TEST')
    print()


def real_board_TEST():
    print('Start mixed_board_TEST')
    TEST(find_winner_all([
        [ [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ [' ', 'o', ' ', 'x'],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', 'x', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', 'o', ' '] ],
        [ ['o', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'x', ' ', 'o'],
          [' ', ' ', ' ', ' '] ],
        [ [' ', 'o', 'o', 'o'],
          [' ', 'x', ' ', ' '],
          [' ', ' ', ' ', ' '],
          ['x', ' ', ' ', ' '] ]])==True)
    TEST(find_winner_all([
        [ [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          ['x', 'x', 'o', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==None)
    
    print('End mixed_board_TEST')
    print()

def illegal_move_TEST():
    print('Start illegal_move_TEST')

    
    TEST(make_move('x','A4',[
        [ [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          ['x', 'x', 'o', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==False)

    
    TEST(make_move('x','A12',[
        [ [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          ['x', 'x', 'o', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==False)

    
    TEST(make_move('x','D52',[
        [ [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ ['x', ' ', ' ', ' '],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', 'x', ' '],
          [' ', ' ', ' ', 'x'],
          [' ', 'o', ' ', ' '],
          [' ', ' ', ' ', ' '] ],
        [ [' ', ' ', ' ', ' '],
          ['x', 'x', 'o', ' '],
          [' ', ' ', ' ', ' '],
          [' ', ' ', ' ', ' '] ]])==False)

    print('End illegal_move_TEST')
    print()
    




line_TEST()
face_diagonal_TEST()
space_diagonal_TEST()
real_board_TEST()
illegal_move_TEST()

